# 配置Eureka Server的地址信息，如果是Eureka Server集群，多个节点使用逗号','分割。
# 如果开启了安全认证，使用HTTP Bacic格式提供用户名和密码。
# 如果Eureka Server是一个集群，那么配置Eureka Server节点信息的时候，建议将所有的Eureka Server节点信息都配置上
# 实际上，只配置一个Eureka Server节点其实就可以了，但是，Eureka Server对服务的管理有连带责任。如果只配置一个Eureka Server节点，那么会导致级联删除的风险，可能导致服务不可靠
# 如果配置了多个Eureka Server节点，Eureka不会将当期的服务同时注册到所有Eureka Server节点上
# 从第一个配置的Eureka Server节点开始注册，如果注册成功，后续的Eureka Server节点不再重复注册
# 每30秒，Eureka Client发送一个心跳到Eureka Server上，如果心跳没有反馈，则从已配置的Eureka Server节点列表的下一个服务节点继续注册。
# 这样做可以保证服务的可靠性，降低服务连带责任导致的服务不可靠。
# 如果多个Eureka Client需要注册，建议Eureka Server的服务列表顺序是随机排列的。
# 如：有Eureka Server s1,s2,s3，有Eureka Client c1,c2,c3。
# 那么在c1上配置的Eureka Server列表建议是s1,s2,s3，在c2上配置的是s2,s3,s1，在c3上配置的是s3,s1,s2，这样可以更好的利用Eureka Server集群的特性。
# 因为Eureka Server和Eureka Client对心跳的监测都是3*间隔时间的，所以会有服务列表数据的不同步可能。
# 所以在CAP原则上，Eureka Server是保证AP原则，放弃C原则的。
#eureka.client.serviceUrl.defaultZone=http://eurekaserver1:111111@eurekaserver1:8761/eureka/,http://eurekaserver2:222222@eurekaserver2:8761/eureka/
eureka.client.service-url.defaultZone=http://eureka-server-01:8761/eureka/
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}

#security.basic.enabled=true

# 启用shutdown，优雅停服功能，配置actuator的优雅关闭
# actuator 组件监听shutdown请求地址的时候，要求请求的method必须是POST
# shutdown的请求地址是使用：@PostMapping或@RequestMapping(method=RequestMethod.POST)
#endpoints.shutdown.enabled=true
# 禁用密码验证
#endpoints.shutdown.sensitive=false
